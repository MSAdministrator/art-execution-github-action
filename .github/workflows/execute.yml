name: Execute Atomic Red Team Tests

on:
  schedule:
    - cron: "0 21 * * *"
  workflow_dispatch:
    inputs:
      framework:
        type: string
        default: atomic-operator
        description: Choose the execution framework to use. Current options are 'atomic-operator' & 'invoke-atomicredteam'
      atomic_test:
        type: array
        description: The technique or sub-technique of a defined Atomic test.
      test_guids:
        type: array
        description: One or more test GUIDS defined within an Atomic test.
        default: ''
      os_name:
        description: The operating system name to run the test on.
        default: windows-latest # can be custom name but other options are 'ubuntu-latest' & 'macos-latest'
        type: string

jobs:

  setup:
    name: Setup ${{ github.event.inputs.framework }} on ${{ github.event.inputs.os_name }}
    runs-on:  ${{ github.event.inputs.os_name }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Upgrade pip
        run: |
          pip install pip
          pip --version
      - name: Installing ${{ github.event.inputs.framework }}
        if: github.event.inputs.framework == 'atomic-operator'
        run: |
          pip install atomic-operator --upgrade

      - name: Installing ${{ github.event.inputs.framework }}
        if: github.event.inputs.framework == 'invoke-atomicredteam'
        shell: pwsh
        run: |
          IEX (IWR 'https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/install-atomicredteam.ps1' -UseBasicParsing)
          Install-AtomicRedTeam -getAtomics -Force

      - name: Execute Test
        if:  github.event.inputs.framework == 'atomic-operator'
        id: run-atomic-operator
        shell: python
        run: |
          import os
          from atomic_operator import AtomicOperator
          
          atomic_operator = AtomicOperator()
          atomic_operator.get_atomics()
          
          targeted_techniques = "${{ github.event.inputs.atomic_test }}"
          if not isinstance(targeted_techniques, list):
            targeted_techniques = [targeted_techniques]

          response = atomic_operator.run(
            techniques=targeted_techniques
          )
          if "GITHUB_OUTPUT" in os.environ:
            with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              if not isinstance(response, list):
                response = [response]
              for item in response:
                for key, value in item.items() :
                  print(f"{key}={value}", file=f)

      - name: Execute Test using Invoke-AtomicRedTeam
        if:  github.event.inputs.framework == 'invoke-atomicredteam'
        id: run-invoke-atomic-red-team
        shell: pwsh
        run: |
          $test = Get-Module -name Invoke-AtomicRedTeam
          write-host $test
          
          $response = Invoke-AtomicTest "${{ github.event.inputs.atomic_test }}"
          write-host $response
  
      - name: Test
        run: |
          echo "${{ steps.run-atomic-operator.outputs.response }}"
      
#       - name: Upload coverage data
#         if: always() && matrix.session == 'tests'
#         uses: "actions/upload-artifact@v3"
#         with:
#           name: coverage-data
#           path: ".coverage.*"

#       - name: Upload documentation
#         if: matrix.session == 'docs-build'
#         uses: actions/upload-artifact@v3
#         with:
#           name: docs
#           path: docs/_build

